{"version":3,"sources":["assets/pacman.svg","store/action.js","store/actionTypes.js","movieCard.js","SearchMovie.js","MovieDetails.js","App.js","serviceWorker.js","store/reducer.js","store/store.js","index.js"],"names":["module","exports","init","page","dispatch","a","type","searched","fetch","res","json","data","result","results","hasMore","total_pages","initPage","searchForMovie","term","console","log","movie","className","src","poster_path","alt","title","length","slice","release_date","vote_average","overview","useDispatch","useState","query","setQuery","movies","useSelector","state","loading","HasMore","observer","useRef","lastMovieElementRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","threshold","observe","useEffect","actions","searchMovies","event","preventDefault","onSubmit","htmlFor","name","placeholder","value","onChange","e","target","map","index","ref","key","to","id","Loader","useParams","setLoading","setData","url","message","original_title","genres","genre","runtime","App","path","component","MovieDetails","SearchMovie","Boolean","window","location","hostname","match","initialState","reducer","action","updatedState","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","Store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.6b060dc6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pacman.01125eaa.svg\";","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport const init = (page) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: actionTypes.ToggleLoading,\r\n    });\r\n    dispatch({\r\n      type: actionTypes.toggleSearched,\r\n      searched: false,\r\n    });\r\n    dispatch({ type: actionTypes.initPage });\r\n    const res = await fetch(\r\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=6387ef21dc196070b8bf74183b7fc49d&page=${page}`\r\n    );\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: actionTypes.init,\r\n      result: data.results,\r\n      hasMore: page < data.total_pages,\r\n    });\r\n    dispatch({\r\n      type: actionTypes.ToggleLoading,\r\n    });\r\n  };\r\n};\r\n\r\nexport const initPage = () => {\r\n  return {\r\n    type: actionTypes.initPage,\r\n  };\r\n};\r\n\r\nexport const incrementPage = () => {\r\n  return {\r\n    type: actionTypes.incrementPage,\r\n  };\r\n};\r\n\r\nexport const toggleLoading = () => {\r\n  return {\r\n    type: actionTypes.ToggleLoading,\r\n  };\r\n};\r\n\r\nexport const searchForMovie = (term, page) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: actionTypes.ToggleLoading,\r\n    });\r\n    dispatch({\r\n      type: actionTypes.toggleSearched,\r\n      searched: true,\r\n    });\r\n    dispatch({ type: actionTypes.initPage });\r\n    const res = await fetch(\r\n      `https://api.themoviedb.org/3/search/movie?api_key=6387ef21dc196070b8bf74183b7fc49d&query=${term}&page=${page}`\r\n    );\r\n    const data = await res.json();\r\n    console.log(data);\r\n    dispatch({\r\n      type: actionTypes.ToggleLoading,\r\n    });\r\n    dispatch({\r\n      type: actionTypes.searchForMovie,\r\n      result: data.results,\r\n      hasMore: page < data.total_pages,\r\n    });\r\n  };\r\n};\r\n\r\nexport const addElements = (term, page) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: actionTypes.ToggleLoading,\r\n    });\r\n    if (term.length === 0) {\r\n      const res = await fetch(\r\n        `https://api.themoviedb.org/3/trending/movie/day?api_key=6387ef21dc196070b8bf74183b7fc49d&page=${page}`\r\n      );\r\n      const data = await res.json();\r\n      dispatch({\r\n        type: actionTypes.addElements,\r\n        result: data.results,\r\n        hasMore: page < data.total_pages,\r\n      });\r\n    } else {\r\n      const res = await fetch(\r\n        `https://api.themoviedb.org/3/search/movie?api_key=6387ef21dc196070b8bf74183b7fc49d&query=${term}&page=${page}`\r\n      );\r\n      const data = await res.json();\r\n      dispatch({\r\n        type: actionTypes.addElements,\r\n        result: data.results,\r\n        hasMore: page < data.total_pages,\r\n      });\r\n    }\r\n    dispatch({\r\n      type: actionTypes.ToggleLoading,\r\n    });\r\n  };\r\n};\r\n","export const init = \"init\";\r\nexport const searchForMovie = \"searchForMovie\";\r\nexport const initPage = \"initPage\";\r\nexport const incrementPage = \"incrementPage\";\r\nexport const ToggleLoading = \"ToggleLoading\";\r\nexport const addElements = \"addElements\";\r\nexport const toggleHasMore = \"toggleHasMore\";\r\nexport const toggleSearched = \"toggleSearched\";\r\n","import React from \"react\";\r\n\r\nexport default function ({ movie }) {\r\n  return (\r\n    <div className=\"card\">\r\n      <img\r\n        className=\"card--image\"\r\n        src={\r\n          movie.poster_path\r\n            ? `https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}`\r\n            : \"https://images.unsplash.com/photo-1594322436404-5a0526db4d13?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=715&q=80\"\r\n        }\r\n        alt={movie.title + \" poster\"}\r\n      />\r\n      <div className=\"card--content\">\r\n        <h3 className=\"card--title\">\r\n          {movie.title.length > 20 ? (\r\n            <span>\r\n              {movie.title.slice(0, 20)}\r\n              ...\r\n            </span>\r\n          ) : (\r\n            movie.title\r\n          )}\r\n        </h3>\r\n        <p className=\"card--stat\">\r\n          <small>Release: {movie.release_date}</small>\r\n          {\"  \"}\r\n          <small>RATING: {movie.vote_average}</small>\r\n        </p>\r\n        <p className=\"card--desc\">\r\n          {movie.overview.length > 100 ? (\r\n            <span>\r\n              {movie.overview.slice(0, 100)}\r\n              ...\r\n            </span>\r\n          ) : (\r\n            movie.overview\r\n          )}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Loader from \"./assets/pacman.svg\";\r\nimport * as actions from \"./store/action\";\r\nimport MovieCard from \"./movieCard\";\r\n\r\nexport default function () {\r\n  const dispatch = useDispatch();\r\n\r\n  const [query, setQuery] = useState(\"\");\r\n  const movies = useSelector((state) => state.data);\r\n  const page = useSelector((state) => state.page);\r\n  const loading = useSelector((state) => state.loading);\r\n  const HasMore = useSelector((state) => state.hasMore);\r\n  const searched = useSelector((state) => state.searched);\r\n\r\n  const observer = useRef();\r\n  const lastMovieElementRef = useCallback(\r\n    (node) => {\r\n      if (loading) return;\r\n      if (observer.current) observer.current.disconnect();\r\n      observer.current = new IntersectionObserver(\r\n        (entries) => {\r\n          if (entries[0].isIntersecting && HasMore) {\r\n            dispatch(actions.incrementPage());\r\n          }\r\n        },\r\n        { threshold: 0.5 }\r\n      );\r\n      if (node) observer.current.observe(node);\r\n    },\r\n    [loading, HasMore]\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.init(1));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (page > 1) {\r\n      dispatch(actions.addElements(query, page));\r\n    }\r\n  }, [page]);\r\n\r\n  const searchMovies = async (event) => {\r\n    event.preventDefault();\r\n    dispatch(actions.initPage);\r\n    if (query.length === 0) {\r\n      dispatch(actions.init(1));\r\n    } else {\r\n      dispatch(actions.searchForMovie(query, 1));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"form\" onSubmit={searchMovies}>\r\n        <label className=\"label\" htmlFor=\"query\">\r\n          Movie Name\r\n        </label>\r\n        <input\r\n          className=\"input\"\r\n          type=\"text\"\r\n          name=\"query\"\r\n          placeholder=\"i.e. Avengers\"\r\n          value={query}\r\n          onChange={(e) => {\r\n            setQuery(e.target.value);\r\n          }}\r\n        />\r\n        <input type=\"submit\" className=\"button\" value=\"Search\" />\r\n      </form>\r\n      <h4 className=\"res_title\">\r\n        {searched ? \"Related Search Results\" : \"Trending Today\"}\r\n      </h4>\r\n      <div className=\"card-list\">\r\n        {movies.length > 0 &&\r\n          movies.map((movie, index) =>\r\n            index + 1 === movies.length ? (\r\n              <div ref={lastMovieElementRef} key={index}>\r\n                <Link to={`/movie/${movie.id}`}>\r\n                  <MovieCard movie={movie} />\r\n                </Link>\r\n              </div>\r\n            ) : (\r\n              <div key={index}>\r\n                <Link to={`/movie/${movie.id}`}>\r\n                  <MovieCard movie={movie} />\r\n                </Link>\r\n              </div>\r\n            )\r\n          )}\r\n      </div>\r\n      {loading ? (\r\n        <div className=\"loading\">\r\n          <img src={Loader} alt=\"loader\" />\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport Loader from \"./assets/pacman.svg\";\r\n\r\nexport default function () {\r\n  const { id } = useParams();\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState(null);\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const url = `https://api.themoviedb.org/3/movie/${id}?api_key=6387ef21dc196070b8bf74183b7fc49d`;\r\n    (async function () {\r\n      try {\r\n        const res = await fetch(url);\r\n        const data = await res.json();\r\n        console.log(data);\r\n        setData(data);\r\n      } catch (e) {\r\n        console.log(e.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    })();\r\n  }, []);\r\n  return (\r\n    <div className=\"center\">\r\n      {!loading && data ? (\r\n        <>\r\n          <div className=\"movie\">\r\n            <div className=\"movie_poster\">\r\n              <img\r\n                src={\r\n                  data.poster_path\r\n                    ? `https://image.tmdb.org/t/p/w185_and_h278_bestv2/${data.poster_path}`\r\n                    : \"https://images.unsplash.com/photo-1594322436404-5a0526db4d13?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=715&q=80\"\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"movie_details\">\r\n              <h3>\r\n                {data.original_title}{\" \"}\r\n                <span>({data.release_date.slice(0, 4)})</span>\r\n              </h3>\r\n              <p className=\"movie_details-info\">\r\n                <span>{data.release_date}</span>\r\n                <span className=\"dot\"></span>\r\n                <span>\r\n                  {data.genres.map((genre, index) =>\r\n                    index + 1 === data.genres.length\r\n                      ? genre.name\r\n                      : genre.name + \", \"\r\n                  )}\r\n                </span>\r\n                <span className=\"dot\"></span>\r\n                <span>{data.runtime}mins</span>\r\n              </p>\r\n              <h4 className=\"movie_details-overview\">overview</h4>\r\n              <p>{data.overview}</p>\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <img className=\"loader__movieDetails\" src={Loader} alt=\"loader\" />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\n\nimport SearchMovie from \"./SearchMovie\";\nimport MovieDetails from \"./MovieDetails\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/movie/:id\" component={MovieDetails} />\n          <Route path=\"/\" component={SearchMovie} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as ActionTypes from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  page: 0,\r\n  loading: false,\r\n  hasMore: true,\r\n  searched: false,\r\n};\r\n\r\nfunction reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ActionTypes.init: {\r\n      return {\r\n        ...state,\r\n        data: action.result,\r\n        hasMore: action.hasMore,\r\n      };\r\n    }\r\n    case ActionTypes.searchForMovie: {\r\n      return {\r\n        ...state,\r\n        data: action.result,\r\n        hasMore: action.hasMore,\r\n      };\r\n    }\r\n    case ActionTypes.initPage: {\r\n      return {\r\n        ...state,\r\n        page: 1,\r\n      };\r\n    }\r\n    case ActionTypes.incrementPage: {\r\n      return {\r\n        ...state,\r\n        page: state.page + 1,\r\n      };\r\n    }\r\n    case ActionTypes.addElements: {\r\n      const updatedState = {\r\n        ...state,\r\n        data: [...state.data, ...action.result],\r\n        hasMore: action.hasMore,\r\n      };\r\n      return updatedState;\r\n    }\r\n    case ActionTypes.ToggleLoading: {\r\n      return {\r\n        ...state,\r\n        loading: !state.loading,\r\n      };\r\n    }\r\n    case ActionTypes.toggleSearched: {\r\n      return {\r\n        ...state,\r\n        searched: action.searched,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducer from \"./reducer\";\r\n\r\nconst composeEnhancers =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    : null || compose;\r\n\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\r\n// const store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\n\nimport Store from \"./store/store\";\n\nReactDOM.render(\n  <Provider store={Store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}